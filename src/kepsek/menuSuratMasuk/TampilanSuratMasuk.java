/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package kepsek.menuSuratMasuk;

import admin.menuKelolaAkun.TampilanKelolaAkun;
import admin.menuSuratMasuk.*;
import admin.menuSuratKeluar.*;
import admin.menuSuratMasuk.*;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import lib.Query;
/**
 *
 * @author galang
 */
public class TampilanSuratMasuk extends javax.swing.JPanel {

    private Query query = new Query();
    private String[] coloumn = {"no_surat","tanggal_surat","pengirim","kategori","perihal","status_notifikasi"};
    private byte[] file;
    
    private static final String DEFAULT_SEARCH_TEXT = "Cari";
    
    public TampilanSuratMasuk() {
       initComponents();
        menampilkanSuratMasuk();
        
        // Set default text and add focus listener
        cari.setText(DEFAULT_SEARCH_TEXT);
        cari.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                if (cari.getText().equals(DEFAULT_SEARCH_TEXT)) {
                    cari.setText("");
                }
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                if (cari.getText().isEmpty()) {
                    cari.setText(DEFAULT_SEARCH_TEXT);
                } else {
                    // Refresh the table when focus is lost
                    String searchText = cari.getText();
                    String selectedOption = (String) pilih.getSelectedItem();
                    menampilkanSuratMasuk(searchText, selectedOption);
                }
            }
        });
    }
    
     void menampilkanSuratMasuk(){
        try {
            ResultSet hasil = query.setNamaTabel("surat_masuk").setAtribut(this.coloumn).select();
            
            DefaultTableModel modelTable = new DefaultTableModel(); 
            modelTable.addColumn("No Surat");
            modelTable.addColumn("Tanggal Diterima");
            modelTable.addColumn("Pengirim");
            modelTable.addColumn("Kategori");
            modelTable.addColumn("Perihal");
            modelTable.addColumn("Status");
            
            
            while(hasil.next()){
                String no = hasil.getString("no_surat");
                String tanggal = hasil.getString("tanggal_surat");
                String pengirim = hasil.getString("pengirim");
                String kategori = hasil.getString("kategori");
                String perihal = hasil.getString("perihal");
                String status_notifikasi = hasil.getString("status_notifikasi");
                
                modelTable.addRow(new Object[]{no, tanggal, pengirim, kategori, perihal, status_notifikasi});
            }
            tabel_suratMasuk.setRowHeight(30);
            tabel_suratMasuk.setModel(modelTable);
            
        }catch (Exception ex) {
            Logger.getLogger(TampilanKelolaAkun.class.getName()).log(Level.SEVERE, null, ex);
        }
     }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cari = new javax.swing.JTextField();
        pilih = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabel_suratMasuk = new javax.swing.JTable();

        setBackground(new java.awt.Color(158, 158, 158));
        setMinimumSize(new java.awt.Dimension(860, 483));
        setPreferredSize(new java.awt.Dimension(860, 483));

        cari.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        cari.setText("Cari");
        cari.setMinimumSize(new java.awt.Dimension(0, 40));
        cari.setPreferredSize(new java.awt.Dimension(600, 40));
        cari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cariActionPerformed(evt);
            }
        });
        cari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cariKeyPressed(evt);
            }
        });

        pilih.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "No", "Perihal", "Kategori", "Tanggal Diterima" }));
        pilih.setToolTipText("");
        pilih.setPreferredSize(new java.awt.Dimension(80, 40));

        tabel_suratMasuk.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabel_suratMasuk.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tabel_suratMasukMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(tabel_suratMasuk);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 811, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cari, javax.swing.GroupLayout.DEFAULT_SIZE, 580, Short.MAX_VALUE)
                        .addGap(98, 98, 98)
                        .addComponent(pilih, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(cari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pilih, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(84, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cariKeyPressed
        // TODO add your handling code here:
        String searchText = cari.getText();
    String selectedOption = (String) pilih.getSelectedItem();
    menampilkanSuratMasuk(searchText, selectedOption);
}                                    

void TampilanSuratMasuk(String searchText, String selectedOption) {
    try {

        String queryCondition = "";
        switch (selectedOption) {
            case "No":
                queryCondition = coloumn[0];
                break;
            case "Tanggal Surat":
                queryCondition = "tanggal_surat";
                break;
            case "Pengirim":
                queryCondition = "pengirim";
                break;
            case "Kategori":
                queryCondition = "kategori ";
                break;
            case "Perihal":
                queryCondition = "perihal";
                break;
            default:
                break;
        }
        // Lakukan query dengan kondisi yang telah dibuat
        ResultSet hasil = query.setNamaTabel("surat_masuk").setAtribut(this.coloumn).setWhereId(queryCondition, searchText).selectWhereLike();

        DefaultTableModel modelTable = new DefaultTableModel(); 
            modelTable.addColumn("No Surat");
            modelTable.addColumn("Tanggal Diterima");
            modelTable.addColumn("Pengirim");
            modelTable.addColumn("Kategori");
            modelTable.addColumn("Perihal");
            modelTable.addColumn("Status");

        while (hasil.next()) {
            String no = hasil.getString("no_surat");
            String tanggal = hasil.getString("tanggal_surat");
            String pengirim = hasil.getString("pengirim");
            String kategori = hasil.getString("kategori");
            String perihal = hasil.getString("perihal");
            String status_notifikasi = hasil.getString("status_notifikasi");

            modelTable.addRow(new Object[]{no, tanggal, pengirim, kategori, perihal, status_notifikasi});
        }
        tabel_suratMasuk.setRowHeight(30);
        tabel_suratMasuk.setModel(modelTable);

    } catch (Exception ex) {
        Logger.getLogger(TampilanKelolaAkun.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_cariKeyPressed

    private void cariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cariActionPerformed
        // TODO add your handling code here:
     String searchText = cari.getText();
        String selectedOption = (String) pilih.getSelectedItem();
        menampilkanSuratMasuk(searchText, selectedOption);
}                                    

void menampilkanSuratMasuk(String searchText, String selectedOption) {
    try {
            String queryCondition = "";
            switch (selectedOption) {
                case "No":
                    queryCondition = coloumn[0];
                    break;
                case "Tanggal Surat":
                    queryCondition = "tanggal_surat";
                    break;
                case "Pengirim":
                    queryCondition = "pengirim";
                    break;
                case "Kategori":
                    queryCondition = "kategori ";
                    break;
                case "Perihal":
                    queryCondition = "perihal";
                    break;
                case "File Surat":
                    queryCondition = "file_surat ";
                    break;
                case "Status Notifikasi":
                    queryCondition = "status_notifikasi ";
                    break;
                default:
                    break;
            }
            // Lakukan query dengan kondisi yang telah dibuat
            ResultSet hasil = query.setNamaTabel("surat_masuk").setAtribut(this.coloumn).setWhereId(queryCondition, searchText).selectWhereLike();

            DefaultTableModel modelTable = new DefaultTableModel(); 
            modelTable.addColumn("No Surat");
            modelTable.addColumn("Tanggal Diterima");
            modelTable.addColumn("Pengirim");
            modelTable.addColumn("Kategori");
            modelTable.addColumn("Perihal");
            modelTable.addColumn("Status");

            while (hasil.next()) {
                String no = hasil.getString("no_surat");
                String tanggal = hasil.getString("tanggal_surat");
                String pengirim = hasil.getString("pengirim");
                String kategori = hasil.getString("kategori");
                String perihal = hasil.getString("perihal");
                String status_notifikasi = hasil.getString("status_notifikasi");

                modelTable.addRow(new Object[]{no, tanggal, pengirim, kategori, perihal, status_notifikasi });
            }
            tabel_suratMasuk.setRowHeight(30);
            tabel_suratMasuk.setModel(modelTable);

        } catch (Exception ex) {
            Logger.getLogger(TampilanKelolaAkun.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_cariActionPerformed

    private void tabel_suratMasukMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabel_suratMasukMousePressed
       int baris = tabel_suratMasuk.rowAtPoint(evt.getPoint());
    if (baris < 0) {
        return; // Clicked outside table rows
    }

    if (evt.getClickCount() == 1) {
        // Single click: set selection on the clicked row
        tabel_suratMasuk.setRowSelectionInterval(baris, baris);
        
        // Logika untuk klik satu kali
        String noSurat = (String) tabel_suratMasuk.getValueAt(baris, 0);
        // Panggil metode atau lakukan aksi yang diinginkan
        System.out.println("Satu kali klik pada No Surat: " + noSurat);
        // Misalnya, Anda bisa memanggil metode lain di sini
        // ppilih(noSurat); // Contoh pemanggilan metode

    } else if (evt.getClickCount() == 2) {
        // Double click: open LihatSurat panel with selected row details
        String[] data = new String[6];

        data[0] = (String) tabel_suratMasuk.getValueAt(baris, 0);
        data[1] = (String) tabel_suratMasuk.getValueAt(baris, 1);
        data[2] = (String) tabel_suratMasuk.getValueAt(baris, 2);
        data[3] = (String) tabel_suratMasuk.getValueAt(baris, 3);
        data[4] = (String) tabel_suratMasuk.getValueAt(baris, 4);
        data[5] = (String) tabel_suratMasuk.getValueAt(baris, 5);

        try {
            String[] atributs = {"no_surat", "file_surat"};
            ResultSet hasil = query.setNamaTabel("surat_masuk").setAtribut(atributs).setWhereId("no_surat", data[0]).selectWhereIdDownload();
            while (hasil.next()) {
                this.file = hasil.getBytes("file_surat");
            }
        } catch (Exception ex) {
            Logger.getLogger(admin.menuSuratMasuk.TampilanSuratMasuk.class.getName()).log(Level.SEVERE, null, ex);
        }

        kepsek.DashboardUtama.SubPanel.removeAll();
        kepsek.DashboardUtama.SubPanel.add(new kepsek.menuSuratMasuk.LihatSurat(data, file));
        kepsek.DashboardUtama.SubPanel.revalidate();
        kepsek.DashboardUtama.SubPanel.repaint(); 
    }
        
    }//GEN-LAST:event_tabel_suratMasukMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cari;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> pilih;
    private javax.swing.JTable tabel_suratMasuk;
    // End of variables declaration//GEN-END:variables
}
