
package admin.menuSuratKeluar;

import admin.menuSuratKeluar.*;
import java.awt.Color;
import java.util.logging.Level;
import java.util.logging.Logger;
import lib.PdfDiJpanel;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.lang.reflect.Constructor;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.sql.SQLException; // Untuk SQLException
import java.sql.SQLIntegrityConstraintViolationException; // Untuk SQLIntegrityConstraintViolationException
import javax.swing.border.LineBorder;
import lib.PdfDiJpanel;
import lib.Query;
import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.printing.PDFPageable;

public class LihatSurat extends javax.swing.JPanel {

    private PdfDiJpanel pdf;
    private String[] data;
    private byte[] binerPdf;
    private Query query;
   
    public LihatSurat(String[] data, byte[] pdfBiner) {
        
        initComponents();
        admin.DashboardUtama.Judul.setText("Lihat Surat Keluar");
        this.data = data;
        this.binerPdf = pdfBiner;
        this.pdf = new PdfDiJpanel();
        this.query = new Query();
        
        try {
            imagePdf.setIcon(pdf.addByteFile(this.binerPdf).getIcon());
        } catch (Exception ex) {
            Logger.getLogger(admin.menuSuratKeluar.LihatSurat.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        imagePdf = new javax.swing.JLabel();
        kembali = new java.awt.Panel();
        jLabel3 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        hapus = new javax.swing.JLabel();
        cetak = new javax.swing.JLabel();
        perbesar = new javax.swing.JLabel();
        perkecil = new javax.swing.JLabel();

        setBackground(new java.awt.Color(158, 158, 158));
        setMinimumSize(new java.awt.Dimension(860, 483));
        setPreferredSize(new java.awt.Dimension(860, 483));

        jScrollPane1.setViewportView(imagePdf);

        kembali.setBackground(new java.awt.Color(255, 255, 255));
        kembali.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                kembaliMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                kembaliMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                kembaliMouseExited(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bahan/globalIcon/kembali-30px.png"))); // NOI18N

        jLabel13.setBackground(new java.awt.Color(0, 0, 0));
        jLabel13.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel13.setText("Kembali");

        javax.swing.GroupLayout kembaliLayout = new javax.swing.GroupLayout(kembali);
        kembali.setLayout(kembaliLayout);
        kembaliLayout.setHorizontalGroup(
            kembaliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kembaliLayout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel13)
                .addContainerGap(27, Short.MAX_VALUE))
        );
        kembaliLayout.setVerticalGroup(
            kembaliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(kembaliLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        hapus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bahan/globalIcon/hapus-30px.png"))); // NOI18N
        hapus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hapusMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                hapusMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                hapusMouseExited(evt);
            }
        });

        cetak.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bahan/globalIcon/print-30px.png"))); // NOI18N
        cetak.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cetakMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cetakMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cetakMouseExited(evt);
            }
        });

        perbesar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bahan/globalIcon/memperbesar-30px.png"))); // NOI18N
        perbesar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                perbesarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                perbesarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                perbesarMouseExited(evt);
            }
        });

        perkecil.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bahan/globalIcon/memperkecil-30px.png"))); // NOI18N
        perkecil.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                perkecilMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                perkecilMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                perkecilMouseExited(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(kembali, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hapus)
                    .addComponent(cetak)
                    .addComponent(perbesar)
                    .addComponent(perkecil))
                .addGap(79, 79, 79)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 421, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(150, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(hapus, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cetak, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(perbesar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(perkecil, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 238, Short.MAX_VALUE)
                        .addComponent(kembali, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addGap(23, 23, 23))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void kembaliMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kembaliMouseClicked

        admin.DashboardUtama.SubPanel.removeAll();
        admin.DashboardUtama.SubPanel.add(new admin.menuSuratKeluar.TampilanSuratKeluar());
        admin.DashboardUtama.SubPanel.revalidate();
        admin.DashboardUtama.SubPanel.repaint();
    }//GEN-LAST:event_kembaliMouseClicked

    private void kembaliMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kembaliMouseEntered
        kembali.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR)); // Ubah kursor saat mouse masuk
        kembali.setBackground(new java.awt.Color(217, 217, 217));
    }//GEN-LAST:event_kembaliMouseEntered

    private void kembaliMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kembaliMouseExited
        kembali.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR)); // Kembalikan kursor saat mouse keluar
        kembali.setBackground(new java.awt.Color(255,255,255)); // Kembalikan warna saat dilepaskan
    }//GEN-LAST:event_kembaliMouseExited

    private void hapusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hapusMouseClicked
        
        // Menampilkan dialog konfirmasi
        int response = JOptionPane.showConfirmDialog(this,
            "Apakah Anda yakin ingin menghapus surat ini?",
            "Konfirmasi Hapus",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE);

        // Jika pengguna memilih "Yes"
        if (response == JOptionPane.YES_OPTION) {
            try {
                query.setNamaTabel("surat_keluar").setWhereId("no_surat", data[0]).delete();
                
                JOptionPane.showMessageDialog(this,"Data Berhasil Dihapus");
                    admin.DashboardUtama.SubPanel.removeAll();
                    admin.DashboardUtama.SubPanel.add(new admin.menuSuratKeluar.TampilanSuratKeluar());
                    admin.DashboardUtama.SubPanel.revalidate();
                    admin.DashboardUtama.SubPanel.repaint();
                
            } catch (SQLIntegrityConstraintViolationException ex) {
                JOptionPane.showMessageDialog(this, "Surat Yang Sudah Terdisposisi Tidak Boleh Di Hapus!", "Kesalahan", JOptionPane.ERROR_MESSAGE);
            } catch (Exception e) {
                Logger.getLogger(LihatSurat.class.getName()).log(Level.SEVERE, null, e);
            }
        }
        // Jika pengguna memilih "No", tidak melakukan apa-apa
    }//GEN-LAST:event_hapusMouseClicked

    private void cetakMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cetakMouseClicked
                try {
    // 1. Tulis biner PDF ke file sementara
    File tempFile = File.createTempFile("pdfbox_temp", ".pdf");
    try (FileOutputStream fos = new FileOutputStream(tempFile)) {
        fos.write(this.binerPdf);
    }

    // 2. Muat PDDocument via PdfBoxLoader
    Object pdDocument = login.PdfBoxLoader.loadDocument(tempFile);

    // 3. Ambil kelas PDFPrintable dari PdfBoxLoader
    Class<?> pdfPrintableClass = login.PdfBoxLoader.getPdfPrinterClass();
    Class<?> pdDocumentClass = login.PdfBoxLoader.getPdDocumentClass();

    // 4. Buat instance PDFPrintable menggunakan reflection
    Constructor<?> constructor = pdfPrintableClass.getConstructor(pdDocumentClass);
    Object printable = constructor.newInstance(pdDocument);

    // 5. Siapkan PrinterJob
    PrinterJob printerJob = PrinterJob.getPrinterJob();
    printerJob.setJobName("PDF Print Job");

    // 6. Set PDFPrintable sebagai Printable
    printerJob.setPrintable((java.awt.print.Printable) printable); // cast via interface

    // 7. Tampilkan dialog dan cetak
    if (printerJob.printDialog()) {
        printerJob.print();
    } else {
        System.out.println("Print cancelled by user.");
    }

    // 8. Tutup dokumen
    login.PdfBoxLoader.closeDocument(pdDocument);

} catch (Exception e) {
    e.printStackTrace();
}
    }//GEN-LAST:event_cetakMouseClicked

    private void perbesarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_perbesarMouseClicked
                try {
            this.pdf.zoomOut();
            imagePdf.setIcon(this.pdf.getIcon());
        } catch (Exception ex) {
            Logger.getLogger(LihatSurat.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_perbesarMouseClicked

    private void perkecilMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_perkecilMouseClicked
                try {
            this.pdf.zoomIn();
            imagePdf.setIcon(this.pdf.getIcon());
        } catch (Exception ex) {
            Logger.getLogger(LihatSurat.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_perkecilMouseClicked

    private void hapusMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hapusMouseEntered
        hapus.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR)); // Ubah kursor saat mouse masuk
        hapus.setBorder(new LineBorder(Color.BLACK, 1)); // Add black border
    }//GEN-LAST:event_hapusMouseEntered

    private void hapusMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hapusMouseExited
        hapus.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR)); // Kembalikan kursor saat mouse keluar
        hapus.setBorder(null); // Remove border
    }//GEN-LAST:event_hapusMouseExited

    private void cetakMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cetakMouseEntered
        cetak.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR)); // Ubah kursor saat mouse masuk
        cetak.setBorder(new LineBorder(Color.BLACK, 1)); // Add black border
    }//GEN-LAST:event_cetakMouseEntered

    private void cetakMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cetakMouseExited
        cetak.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR)); // Kembalikan kursor saat mouse keluar
        cetak.setBorder(null); // Remove border
    }//GEN-LAST:event_cetakMouseExited

    private void perbesarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_perbesarMouseEntered
        perbesar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR)); // Ubah kursor saat mouse masuk
        perbesar.setBorder(new LineBorder(Color.BLACK, 1)); // Add black border
    }//GEN-LAST:event_perbesarMouseEntered

    private void perbesarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_perbesarMouseExited
         perbesar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR)); // Kembalikan kursor saat mouse keluar
         perbesar.setBorder(null); // Remove border
    }//GEN-LAST:event_perbesarMouseExited

    private void perkecilMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_perkecilMouseEntered
        perkecil.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR)); // Ubah kursor saat mouse masuk
        perkecil.setBorder(new LineBorder(Color.BLACK, 1)); // Add black border
    }//GEN-LAST:event_perkecilMouseEntered

    private void perkecilMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_perkecilMouseExited
        perkecil.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR)); // Kembalikan kursor saat mouse keluar
        perkecil.setBorder(null); // Remove border
    }//GEN-LAST:event_perkecilMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel cetak;
    private javax.swing.JLabel hapus;
    private javax.swing.JLabel imagePdf;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private java.awt.Panel kembali;
    private javax.swing.JLabel perbesar;
    private javax.swing.JLabel perkecil;
    // End of variables declaration//GEN-END:variables
}
